version: 2.1

orbs:
  redmine:
    commands:
      download:
        description: Download Redmine << parameters.redmine_version >>
        parameters:
          redmine_version:
            description: version of Redmine
            type: string
        steps:
          - restore_cache:
              keys:
                - '{{ .Environment.CACHE_VERSION }}-redmine-download-<< parameters.redmine_version >>'
          - run:
              name: Download Redmine << parameters.redmine_version >>
              working_directory: '~/'
              command: |
                set -e
                if [ ! -d ~/redmine-<< parameters.redmine_version >> ]; then
                  curl https://redmine.org/releases/redmine-<< parameters.redmine_version >>.tar.gz | tar zx
                fi
          - save_cache:
              key: '{{ .Environment.CACHE_VERSION }}-redmine-download-<< parameters.redmine_version >>'
              paths: ~/redmine-<< parameters.redmine_version >>
      install_plugin:
        description: Install Redmine plugin << parameters.redmine_plugin_repository >>
        parameters:
          redmine_version:
            description: version of Redmine
            type: string
          redmine_plugin_repository:
            description: repository of Redmine plugin
            type: string
        steps:
          - run:
              name: Install plugin << parameters.redmine_plugin_repository >>
              working_directory: ~/redmine-<< parameters.redmine_version >>/plugins
              command: |
                git clone --depth 1 << parameters.redmine_plugin_repository >>
      setup:
        description: Setup Redmine
        parameters:
          db:
            description: Database
            type: string
          redmine_version:
            description: version of Redmine
            type: string
          ruby_version:
            description: version of Ruby
            type: string
        steps:
          - restore_cache:
              keys:
                - '{{ .Environment.CACHE_VERSION }}-redmine-setup-<< parameters.ruby_version >>-<< parameters.redmine_version >>-<< parameters.db >>-{{ checksum "Gemfile.local" }}'
          - run:
              name: Setup Redmine << parameters.redmine_version >>
              working_directory: ~/redmine-<< parameters.redmine_version >>
              command: |
                bundle check || bundle install --without development rmagick
          - save_cache:
              key: '{{ .Environment.CACHE_VERSION }}-redmine-setup-<< parameters.ruby_version >>-<< parameters.redmine_version >>-<< parameters.db >>-{{ checksum "Gemfile.local" }}'
              paths:
                - ~/.bundle
                - ~/redmine-<< parameters.redmine_version >>/Gemfile.lock
          - run:
              name: Setup Database
              working_directory: ~/redmine-<< parameters.redmine_version >>
              command: |
                bundle exec rake db:create db:migrate
          - run:
              name: Setup plugins
              working_directory: ~/redmine-<< parameters.redmine_version >>
              command: |
                bundle exec rake redmine:plugins
executors:
  ruby-sqlite3:
    parameters:
      ruby_version:
        description: version of Ruby
        type: string
    docker:
      - image: circleci/ruby:<< parameters.ruby_version >>-node-browsers
  ruby-pg:
    parameters:
      ruby_version:
        description: version of Ruby
        type: string
    docker:
      - image: circleci/ruby:<< parameters.ruby_version >>-node-browsers
      - image: circleci/postgres:9.2
  ruby-mysql:
    parameters:
      ruby_version:
        description: version of Ruby
        type: string
    docker:
      - image: circleci/ruby:<< parameters.ruby_version >>-node-browsers
      - image: circleci/mysql:5.5
        environment:
          - MYSQL_ALLOW_EMPTY_PASSWORD: true
          - MYSQL_ROOT_HOST: '%'

jobs:
  rspec:
    parameters:
      db:
        default: pg
        description: Database
        type: string
      redmine_plugin:
        description: name of Redmine plugin
        type: string
      redmine_version:
        description: version of Redmine
        type: string
      ruby_version:
        description: version of Ruby
        type: string
    environment:
      BUNDLE_PATH: ~/.bundle
      COVERAGE: true
      RAILS_ENV: test
      CIRCLECI: true
    executor:
      name: ruby-<< parameters.db >>
      ruby_version: << parameters.ruby_version >>
    steps:
      - checkout
      - redmine/download:
          redmine_version: << parameters.redmine_version >>
      - redmine/install_plugin:
          redmine_version: << parameters.redmine_version >>
          redmine_plugin_repository: git@github.com:agileware-jp/alm.git
      - run:
          name: Setup << parameters.redmine_plugin >>
          working_directory: ~/redmine-<< parameters.redmine_version >>
          command: |
            set -e
            ln -s ~/project ~/redmine-<< parameters.redmine_version >>/plugins/<< parameters.redmine_plugin >>
            ln -s ~/project/Gemfile.local Gemfile.local
      - run:
          name: Generate database.yml
          working_directory: ~/redmine-<< parameters.redmine_version >>
          command: |
            cp plugins/<< parameters.redmine_plugin >>/.circleci/database.yml.<< parameters.db >> config/database.yml
      - redmine/setup:
          db: << parameters.db >>
          redmine_version: << parameters.redmine_version >>
          ruby_version: << parameters.ruby_version >>
      - run:
          name: Run Rubocop
          working_directory: ~/redmine-<< parameters.redmine_version >>
          command: |
            bundle exec rubocop --format simple --config plugins/<< parameters.redmine_plugin >>/.rubocop.yml ./plugins/<< parameters.redmine_plugin >>
      - run:
          name: Setup RSpec
          working_directory: ~/redmine-<< parameters.redmine_version >>
          command: |
            bundle exec rails generate rspec:install
      - run:
          name: Run RSpec
          working_directory: ~/redmine-<< parameters.redmine_version >>
          command: |
            bundle exec rspec --format progress --format RspecJunitFormatter -o ~/rspec/rspec.xml plugins/<< parameters.redmine_plugin >>/spec
      - store_artifacts:
          path: ~/redmine-<< parameters.redmine_version >>/plugins/<< parameters.redmine_plugin >>/coverage
          destination: coverage
      - store_artifacts:
          path: ~/rspec/rspec.xml
          destination: rspec.xml
      - store_test_results:
          path: ~/rspec
      - run:
          name: Test migration rollback
          working_directory: ~/redmine-<< parameters.redmine_version >>
          command: |
            bin/rake redmine:plugins:migrate NAME=<< parameters.redmine_plugin >> VERSION=0

workflows:
  version: 2
  test:
    jobs:
      - rspec:
          name: 'Ruby 2.1 Redmine 3.2'
          redmine_version: '3.2.9'
          ruby_version: '2.1'
          redmine_plugin: 'redmine_importer'
